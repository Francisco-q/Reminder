# Generated by Django 4.2.7 on 2025-08-14 02:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('medications', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DailySchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('date', models.DateField(verbose_name='Schedule date')),
                ('scheduled_time', models.TimeField(verbose_name='Scheduled time')),
                ('taken', models.BooleanField(default=False, verbose_name='Taken')),
                ('taken_at', models.DateTimeField(blank=True, null=True, verbose_name='Taken at')),
                ('skipped', models.BooleanField(default=False, verbose_name='Skipped')),
                ('skipped_reason', models.CharField(blank=True, choices=[('forgot', 'Forgot'), ('side_effects', 'Side effects'), ('feeling_better', 'Feeling better'), ('ran_out', 'Ran out of medication'), ('other', 'Other')], max_length=50, verbose_name='Skip reason')),
                ('notification_sent', models.BooleanField(default=False, verbose_name='Notification sent')),
                ('notification_sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Notification sent at')),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='medications.medication')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_schedules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Daily Schedule',
                'verbose_name_plural': 'Daily Schedules',
                'db_table': 'daily_schedules',
                'ordering': ['date', 'scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='WeeklyProgress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('week_start', models.DateField(verbose_name='Week start')),
                ('week_end', models.DateField(verbose_name='Week end')),
                ('total_scheduled', models.PositiveIntegerField(default=0, verbose_name='Total scheduled')),
                ('total_taken', models.PositiveIntegerField(default=0, verbose_name='Total taken')),
                ('total_skipped', models.PositiveIntegerField(default=0, verbose_name='Total skipped')),
                ('total_missed', models.PositiveIntegerField(default=0, verbose_name='Total missed')),
                ('adherence_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Adherence rate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Weekly Progress',
                'verbose_name_plural': 'Weekly Progress',
                'db_table': 'weekly_progress',
                'ordering': ['-week_start'],
                'unique_together': {('user', 'week_start')},
            },
        ),
        migrations.CreateModel(
            name='MedicationDose',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('amount_taken', models.DecimalField(decimal_places=2, help_text='Amount of medication taken (e.g., 0.5 for half tablet)', max_digits=8, verbose_name='Amount taken')),
                ('scheduled_time', models.DateTimeField(verbose_name='Scheduled time')),
                ('actual_time', models.DateTimeField(verbose_name='Actual time taken')),
                ('side_effects', models.TextField(blank=True, verbose_name='Side effects')),
                ('effectiveness', models.PositiveIntegerField(blank=True, choices=[(1, 'Very poor'), (2, 'Poor'), (3, 'Average'), (4, 'Good'), (5, 'Excellent')], null=True, verbose_name='Effectiveness rating')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('daily_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doses', to='schedules.dailyschedule')),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doses', to='medications.medication')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medication_doses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Medication Dose',
                'verbose_name_plural': 'Medication Doses',
                'db_table': 'medication_doses',
                'ordering': ['-actual_time'],
                'indexes': [models.Index(fields=['user', 'medication'], name='medication__user_id_cf3b80_idx'), models.Index(fields=['user', 'actual_time'], name='medication__user_id_07646e_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='dailyschedule',
            index=models.Index(fields=['user', 'date'], name='daily_sched_user_id_e3adb5_idx'),
        ),
        migrations.AddIndex(
            model_name='dailyschedule',
            index=models.Index(fields=['user', 'date', 'taken'], name='daily_sched_user_id_63ff58_idx'),
        ),
        migrations.AddIndex(
            model_name='dailyschedule',
            index=models.Index(fields=['medication', 'date'], name='daily_sched_medicat_59cb59_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dailyschedule',
            unique_together={('user', 'medication', 'date', 'scheduled_time')},
        ),
    ]
